{"version":3,"file":"static/js/374.c2b4b761.chunk.js","mappings":"6NAgHA,UA9FiB,YACMA,EAAAA,EAAAA,KAAY,SAACC,GAAiB,OAAGA,EAAMC,MAAMA,KAAK,IACrEC,SAASC,MAAQ,sEAEAC,EAAAA,EAAAA,QAAgC,OAChCA,EAAAA,EAAAA,QAAgC,MADjD,IAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAG,yCAAG,WAAOC,EAAeC,GAAe,uFACvCC,EAAAA,EAAAA,GAAMF,GAAS,GAAIC,GAAY,IAAG,uBAClCJ,GAASM,EAAAA,EAAAA,MAAc,OAC7BR,EAAS,KAAI,2CAChB,gBAJQ,wCAMT,OAAGS,aAAaC,QAAQ,UAEhB,gBAAKC,UAAU,QAAO,UAClB,0BAEI,uHAOZ,gBAAKA,UAAU,QAAO,UAUjB,4BACJ,sDACG,SAAC,KAAM,CACPC,cAAe,CAAEP,MAAO,GAAIC,SAAU,IACtCO,SAAU,SAAAC,GACN,IAAMC,EAAa,CAAC,EAQpB,OAPKD,EAAOT,MAGX,2CAA2CW,KAAKF,EAAOT,SAExDU,EAAOV,MAAQ,yBAJfU,EAAOV,MAAQ,WAMRU,CACX,EACAE,SAAU,SAACH,EAAO,GAAgB,EAAbI,cACjBd,EAAIU,EAAOT,MAAOS,EAAOR,SAC7B,EAAE,SAED,gBACGQ,EAAM,EAANA,OACAC,EAAM,EAANA,OACAI,EAAO,EAAPA,QACAC,EAAY,EAAZA,aACAC,EAAU,EAAVA,WACAC,EAAY,EAAZA,aACAC,EAAY,EAAZA,aAAY,OAEZ,kBAAMN,SAAUK,EAAa,WAC7B,kBACIE,KAAK,QACLC,KAAK,QACLC,SAAUN,EACVO,OAAQN,EACRO,MAAOd,EAAOT,QAEjBU,EAAOV,OAASc,EAAQd,OAASU,EAAOV,OACzC,mBACA,kBACImB,KAAK,WACLC,KAAK,WACLC,SAAUN,EACVO,OAAQN,EACRO,MAAOd,EAAOR,WAEjBS,EAAOT,UAAYa,EAAQb,UAAYS,EAAOT,UAC3C,SAAC,IAAM,CAACkB,KAAK,SAASK,SAAUN,EAAa,wCAG1C,QAMvB,C,sGCnGO,SAAShB,EAAMF,EAAcC,GAUhC,OARiBwB,EAAAA,EAAAA,KAAW,GAAD,OAAIC,EAAAA,GAAG,eAAe,CAC7CzB,SAAUA,EACVD,MAAOA,IAEV2B,MAAK,SAACC,GAEHxB,aAAayB,QAAQ,QAASD,EAAIE,KAAKvC,MAC3C,GAEJ,CAEO,SAASwC,EAAa/B,EAAcC,EAAiB+B,EAAmBC,GAS3E,OAPiBR,EAAAA,EAAAA,KAAW,GAAD,OAAIC,EAAAA,GAAG,sBAAsB,CACpDzB,SAAUA,EACVgC,SAAUA,EACVD,UAAWA,EACXhC,MAAOA,GAKf,C","sources":["Page/Login/Login.tsx","Page/Login/LoginService.ts"],"sourcesContent":["import React, { FC, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {getAuth, GoogleAuthProvider, signInWithPopup, signOut} from 'firebase/auth'\r\nimport { Button } from \"react-bootstrap\";\r\nimport { logIn } from \"./LoginService\";\r\nimport Input from \"../../UI/Input/Input\";\r\nimport './Login.scss'\r\nimport { redirect, useNavigate } from \"react-router-dom\";\r\nimport { tokenAction } from \"../../Redux/store/token\";\r\nimport { Formik } from \"formik\";\r\n\r\nexport interface ILoginRedux{\r\n    token: {\r\n        token: string,\r\n    }\r\n}\r\n\r\n\r\nconst Login:FC = () => {\r\n    const token:any  = useSelector((state:ILoginRedux)=>state.token.token)\r\n    document.title = \"Авторизация\"\r\n\r\n    const password = useRef<HTMLInputElement | null>(null)\r\n    const loginInp = useRef<HTMLInputElement | null>(null)\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n    \r\n    const log = async (email: string, password:string) =>{\r\n        await logIn(email || '', password || '')\r\n        await dispatch(tokenAction())\r\n        navigate(`/`)\r\n    }\r\n\r\n    if(localStorage.getItem('token')){\r\n        return (\r\n            <div className=\"Login\">\r\n                <div>\r\n                    \r\n                    <h2>Вы авторизованы</h2>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"Login\">\r\n            {/* <div>\r\n                \r\n                <h2>Вход</h2>\r\n                <input type=\"text\" ref={loginInp} placeholder=\"Логин\"/>\r\n                <input type=\"password\" ref={password} placeholder=\"Пароль\"/>\r\n                <Button onClick={()=>{log()}}>\r\n                    Вход\r\n                </Button>\r\n            </div> */}\r\n             <div>\r\n         <h2>Вход</h2>\r\n            <Formik\r\n            initialValues={{ email: '', password: '' }}\r\n            validate={values => {\r\n                const errors:any = {};\r\n                if (!values.email) {\r\n                errors.email = 'Required';\r\n                } else if (\r\n                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n                ) {\r\n                errors.email = 'Invalid email address';\r\n                }\r\n                return errors;\r\n            }}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n                log(values.email, values.password)\r\n            }}\r\n            >\r\n            {({\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                isSubmitting,\r\n            }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.email}\r\n                />\r\n                {errors.email && touched.email && errors.email}\r\n                <br/>\r\n                <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.password}\r\n                />\r\n                {errors.password && touched.password && errors.password}\r\n                    <Button type=\"submit\" disabled={isSubmitting}>\r\n                        Вход\r\n                    </Button>\r\n                </form>\r\n            )}\r\n            </Formik>\r\n         </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import axios from \"axios\"\r\nimport { redirect, useNavigate } from \"react-router-dom\";\r\nimport { URi } from \"../../Const/Const\";\r\n\r\ninterface IToken{\r\n    data:{\r\n        token:string\r\n    }\r\n    \r\n}\r\n\r\nexport function logIn(email:string, password:string){\r\n    \r\n    const response = axios.post(`${URi}/user/login`, {\r\n        password: password,\r\n        email: email\r\n    })\r\n    .then((res:IToken)=>{\r\n        \r\n        localStorage.setItem('token', res.data.token)\r\n    })\r\n    return response\r\n}\r\n\r\nexport function registration(email:string, password:string, firstName: string, lastName: string){\r\n    \r\n    const response = axios.post(`${URi}/user/registration`, {\r\n        password: password,\r\n        lastName: lastName,\r\n        firstName: firstName,\r\n        email: email\r\n    })\r\n\r\n    return response\r\n\r\n}"],"names":["useSelector","state","token","document","title","useRef","navigate","useNavigate","dispatch","useDispatch","log","email","password","logIn","tokenAction","localStorage","getItem","className","initialValues","validate","values","errors","test","onSubmit","setSubmitting","touched","handleChange","handleBlur","handleSubmit","isSubmitting","type","name","onChange","onBlur","value","disabled","axios","URi","then","res","setItem","data","registration","firstName","lastName"],"sourceRoot":""}