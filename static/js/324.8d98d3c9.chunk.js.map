{"version":3,"file":"static/js/324.8d98d3c9.chunk.js","mappings":"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","sources":["components/BlockMessage/BlockMessage.tsx","UI/Loader/Loader.tsx","components/WebSocket/WebSocketUserTop.tsx","Page/Websocket/Websoket.tsx"],"sourcesContent":["import { domen } from \"../../Const/Const\";\r\nimport { memo, useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IReduceState } from \"../../types/IReduce\";\r\nimport { IUserReducer } from \"../Layout/Layout\";\r\n\r\ninterface IObj{\r\n    user: string,\r\n    id: number,\r\n    event: string,\r\n    text: string,\r\n    img: string\r\n}\r\n\r\ninterface IMess{\r\n    mesg: IObj[];\r\n    deleteMessage: (a: number)=>void\r\n}\r\n\r\n\r\n\r\nconst BlockMessage = memo(({mesg, deleteMessage}:IMess)=>{\r\n  const socket = useRef<WebSocket | null>(null)\r\n  const auth = useSelector((state: IUserReducer)=>state.auth.auth)\r\n    const app  = useSelector((state: IUserReducer)=>state.auth.firebase)\r\n  const user = useSelector((state: IReduceState)=> state.token.token)\r\n\r\n  return(\r\n        <>\r\n        {mesg?.map((mess: IObj)=>\r\n        <div key={mess.id}>\r\n          {mess.event==\"connection\" \r\n          ?\r\n          <div>\r\n          {mess.user} подключился к чату\r\n          </div>\r\n          :\r\n          <div className={mess.user == user?.email ? \"Websocket__messageYou\" : \"Websocket__message\"}>\r\n            <p>Отправитель: {mess.user}</p>\r\n            <p>{mess.text}</p>\r\n            {mess.user == user?.email ? <button onClick={()=>deleteMessage(mess.id)}>Удалить</button> : ''}\r\n            <img className=\"Websocket__img\" src={`http://${domen}/${mess?.user}.jpg`} alt={mess?.user} />\r\n          </div>\r\n          }\r\n        </div>\r\n      )}\r\n        </>\r\n    )\r\n})\r\n\r\nexport default BlockMessage","import React from \"react\";\r\nimport './Loader.scss'\r\n\r\ntype TLoad = {\r\n    visible: boolean\r\n}\r\n\r\nconst Loader = ({visible}:TLoad)=>{\r\n    return(\r\n        <>\r\n        {visible\r\n        ?\r\n        <div className=\"lds-ring\">\r\n        <div className=\"nado\">\r\n        <div className=\"lds-rings\">\r\n        </div>\r\n        <div className=\"lds-rings\">\r\n        </div>\r\n        <div className=\"lds-rings\">\r\n        </div>\r\n        <div className=\"lds-rings\">\r\n        </div>\r\n        </div>\r\n        </div>\r\n        :\r\n        ''\r\n        }\r\n        </>\r\n    )   \r\n}\r\n\r\nexport default Loader","import { domen } from \"../../Const/Const\";\r\nimport { FC, memo, useMemo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { IReduceState } from \"../../types/IReduce\";\r\n\r\nexport interface IListChat{\r\n    listChat:{\r\n        data:{\r\n            user:{\r\n                secondUser: string,\r\n                userCreator: string\r\n            }\r\n        }\r\n    }\r\n    \r\n}\r\n\r\ninterface IListUser{\r\n    email: string\r\n}\r\n\r\ninterface IList{\r\n    secondUser: string,\r\n    userCreator: string,\r\n    secondUserId: string,\r\n    userCreatorId: string,\r\n    id: string\r\n}\r\n\r\nconst WebSocketUserTop:FC = memo(()=>{\r\n    const listChat:any = useSelector((state:IReduceState)=>state.chat.chats)\r\n    const user:IListUser = useSelector((state:IReduceState)=>state.token.token)\r\n    \r\n    const params = useParams()\r\n    const list:IList[] = useMemo(()=>{\r\n        return listChat?.data?.user?.filter((i:any)=>{\r\n            return params?.id == i?.idRoom\r\n        })\r\n    },[listChat])\r\n\r\n    return(\r\n\r\n        <>\r\n               \r\n        <div className=\"Websocket__chatTop\">\r\n            <div>\r\n                {list ?\r\n                list[0]?.secondUser !== user?.email  ? \r\n                <>\r\n                    <Link to={`/my/${list[0].secondUserId}`}>\r\n                        <img src={`http://${domen}/${list[0]?.secondUser}.jpg`} alt=\"\"/>\r\n                        {list[0]?.secondUser}  \r\n                    </Link>\r\n                </>\r\n                : \r\n                <>\r\n                    <Link to={`/my/${list[0].userCreatorId}`}>\r\n                        <img src={`http://${domen}/${list[0]?.userCreator}.jpg`} alt=\"\"/>\r\n                        {list[0]?.userCreator}\r\n                    </Link>\r\n                </>\r\n                : \r\n                ''  \r\n                }\r\n            </div>\r\n          </div>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default WebSocketUserTop","import React, { memo, useRef } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport \"./Websocket.scss\"\r\nimport {useParams} from \"react-router-dom\"\r\nimport { useInView } from 'react-intersection-observer';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport BlockMessage from \"../../components/BlockMessage/BlockMessage\";\r\nimport Loader from \"../../UI/Loader/Loader\";\r\nimport {IStateRedux} from \"../../types/IRef\"\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { IReduceState } from \"../../types/IReduce\";\r\nimport MainYourComponent from \"../../components/MainYour/MainYourComponent\";\r\nimport WebSocketUserTop from \"../../components/WebSocket/WebSocketUserTop\";\r\n\r\nlet limit = 0\r\n\r\nconst Websoket =memo(()=> {\r\n    const dispatch = useDispatch()\r\n    const socket = useRef<WebSocket | null>(null)\r\n    const [connected, setConnected] = useState(false)\r\n    const params = useParams()\r\n    const userRef = useRef<HTMLInputElement>(null)\r\n    const [er, setEr] = useState('')\r\n    const [userNameSt, setUserNameSt] = useState('')\r\n\r\n    const userToken = useSelector((state:any)=>state.token.token)\r\n    const userTokenHS:any = localStorage.getItem('token') ? jwtDecode(localStorage.getItem('token') || '') : ''\r\n    \r\n\r\n    const { ref, inView, entry } = useInView({\r\n      threshold: 0,\r\n    })\r\n    \r\n\r\n    useEffect(()=>{\r\n      limit=limit+10\r\n      if(inView && Number(count)>limit){\r\n        limitFetch()\r\n      }\r\n    },[inView])\r\n\r\n\r\n    function connect(){\r\n      socket.current = new WebSocket(\"ws://localhost:5001/con\")\r\n      \r\n      socket.current.onopen = ()=>{\r\n          const message = {\r\n            event: \"connection\",\r\n            username: userTokenHS?.email,\r\n            id: params.id,\r\n            limit: limit\r\n          }\r\n          socket.current?.send(JSON.stringify(message))\r\n          setConnected(true);\r\n          setInterval(()=>{\r\n\r\n          },15000)\r\n      }\r\n      \r\n\r\n      socket.current.onmessage = (e)=>{        \r\n        const messagex = JSON.parse(e.data)\r\n        \r\n        dispatch({type: 'SEND', action: messagex.rows})\r\n        dispatch({type: 'COUNT', action: messagex.count})\r\n        setVisible(false)\r\n      }\r\n      socket.current.onerror = ()=>{\r\n        setConnected(false);\r\n        setEr(\"Нет соединения\")\r\n        \r\n    }\r\n    socket.current.close = ()=>{\r\n      console.log('Подключение отключено');\r\n  }\r\n    }\r\n    const textRef = useRef<HTMLTextAreaElement | any>()\r\n    const mesg:any = useSelector<IStateRedux>((state) => state.messages.messages)\r\n    const count = useSelector<IStateRedux, string>((state) => state.messages.count)\r\n    const options:object = { weekday: 'short', year: 'numeric', month: 'long', day: 'numeric' };\r\n    \r\n    const listChat:any = useSelector((state:IReduceState)=>state.chat.chats)\r\n\r\n    function sendMessage(){\r\n      setVisible(true)\r\n      const message = {\r\n        event: 'message',\r\n        limit: limit,\r\n        text: textRef.current?.value || '',\r\n        username: userToken.email,\r\n        date: new Date().toLocaleDateString('RU', options) + \" \" + new Date().toLocaleTimeString(),\r\n        id: params.id\r\n      }\r\n      socket.current?.send(JSON.stringify(message))\r\n      window.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: 'smooth'\r\n      });\r\n      textRef.current.value = \"\"\r\n    }\r\n\r\n    function deleteMessage(id: number){\r\n      setVisible(true)\r\n      const message = {\r\n        event: 'delete',\r\n        limit: limit,\r\n        id: params.id,\r\n        idDelete: id,\r\n        idRoom: params.id,\r\n        username: userToken.email,\r\n      }\r\n      socket.current?.send(JSON.stringify(message))\r\n    }\r\n\r\n    useEffect(()=>{\r\n      connect()\r\n    },[])\r\n    \r\n    const [visible, setVisible] = useState(false)\r\n\r\n    function limitFetch(){\r\n      const message = {\r\n        event: 'limit',\r\n        limit: limit,\r\n        id: params.id\r\n      }\r\n      socket.current?.send(JSON.stringify(message))\r\n    }\r\n\r\n    if(localStorage.getItem('token')==null){\r\n      return(\r\n        <div>\r\n            <h2>Вы не авторизованы</h2>\r\n      </div>\r\n      )\r\n    }\r\n    \r\n\r\n  return (\r\n    <div className=\"Websocket__grid\">\r\n      <Loader visible={visible}/>\r\n      <MainYourComponent/>\r\n    <div className=\"Websocket\">\r\n      \r\n      \r\n      <div>\r\n      <br/>\r\n        <WebSocketUserTop />\r\n        <div className=\"Websocket__textarea\">\r\n            <div>\r\n            <textarea ref={textRef} placeholder=\"Введите сообщение\"/>\r\n            <br />\r\n            <button onClick={sendMessage}>Отправить</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"Websocket__conteiner\">\r\n        <BlockMessage deleteMessage={deleteMessage} mesg = {mesg}/>\r\n      </div>\r\n        <div ref={ref}>\r\n          <h2>Загрузка...</h2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Websoket"],"names":["memo","mesg","deleteMessage","user","useRef","useSelector","state","auth","firebase","token","map","mess","event","className","email","text","onClick","id","src","domen","alt","visible","listChat","chat","chats","params","useParams","list","useMemo","data","filter","i","idRoom","secondUser","to","secondUserId","userCreatorId","userCreator","limit","dispatch","useDispatch","socket","useState","setConnected","setEr","userToken","userTokenHS","localStorage","getItem","jwtDecode","useInView","threshold","ref","inView","entry","useEffect","Number","count","message","current","send","JSON","stringify","limitFetch","textRef","messages","options","weekday","year","month","day","WebSocket","onopen","username","setInterval","onmessage","e","messagex","parse","type","action","rows","setVisible","onerror","close","console","log","MainYourComponent","placeholder","value","date","Date","toLocaleDateString","toLocaleTimeString","window","scrollTo","top","left","behavior","idDelete"],"sourceRoot":""}